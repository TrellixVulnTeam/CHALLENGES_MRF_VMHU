"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _collection = require("@laufire/utils/collection");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var buildContext = function buildContext(context, updates) {
  var patchState = function patchState(patch) {
    return context.setState(function (state) {
      return _objectSpread(_objectSpread({}, state), patch);
    });
  };

  (0, _collection.adopt)(context, updates, {
    patchState: patchState
  });
  context.actions = (0, _collection.traverse)(context.actions, function (action) {
    return function (data) {
      return context.setState(function (state) {
        return _objectSpread(_objectSpread({}, state), action(_objectSpread(_objectSpread({}, context), {}, {
          state: state,
          data: data
        })));
      });
    };
  });
  (0, _collection.map)(context, _collection.secure);
};

var updateContext = function updateContext(context, updates) {
  return (context.state ? _collection.adopt : buildContext)(context, updates) || context;
};

var _default = updateContext;
exports["default"] = _default;